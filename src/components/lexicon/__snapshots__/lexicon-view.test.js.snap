// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correct content for 2 columns data 1`] = `
<Lexicon
  data={
    Array [
      Object {
        "c": 1,
        "w": "one",
      },
      Object {
        "c": 2,
        "w": "two",
      },
      Object {
        "c": 3,
        "w": "three",
      },
    ]
  }
>
  <Styled(CardWrapper)
    border="primary"
    squareCorner={true}
  >
    <StyledComponent
      border="primary"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "ftHUXG",
            "rules": Array [
              "
  margin-bottom: 1rem;
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "Styled(CardWrapper)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      squareCorner={true}
    >
      <CardWrapper
        border="primary"
        className="sc-bdVaJa ftHUXG"
        squareCorner={true}
      >
        <Card
          body={false}
          border="primary"
          className="sc-bdVaJa ftHUXG"
        >
          <div
            className="sc-bdVaJa ftHUXG card border-primary"
          >
            <Styled(PanelHeader)
              bg="primary"
            >
              <StyledComponent
                bg="primary"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "ZDOPQ",
                      "rules": Array [
                        "
  padding-left: 0;
  padding-right: 10px;
",
                      ],
                    },
                    "displayName": "Styled(PanelHeader)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <PanelHeader
                  bg="primary"
                  className="sc-bwzfXH ZDOPQ"
                >
                  <CardHeader
                    className="bg-primary text-white sc-bwzfXH ZDOPQ"
                  >
                    <div
                      className="bg-primary text-white sc-bwzfXH ZDOPQ card-header"
                    >
                      <styled.div
                        noHover={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htpNat",
                                "isStatic": false,
                                "lastClassName": "eUqOUx",
                                "rules": Array [
                                  "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htpNat",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          noHover={true}
                        >
                          <div
                            className="sc-htpNat erWfTZ"
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bxivhb",
                                      "isStatic": false,
                                      "lastClassName": "laDLOs",
                                      "rules": Array [
                                        "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bxivhb",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-bxivhb laDLOs"
                                >
                                  Word
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": false,
                                      "lastClassName": "cgFVmA",
                                      "rules": Array [
                                        "
  width: 22%;
  text-align: center;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX cgFVmA"
                                >
                                  Qty
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </CardHeader>
                </PanelHeader>
              </StyledComponent>
            </Styled(PanelHeader)>
            <LexiconList
              itemCount={3}
            >
              <Styled(List)
                height={120}
                itemCount={3}
                itemSize={40}
                width="100%"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-EHOje",
                        "isStatic": false,
                        "lastClassName": "cBUvak",
                        "rules": Array [
                          "
  font-family: PolyglotUnited, \\"Times New Roman\\", Times, serif;
  font-size: larger;
",
                        ],
                      },
                      "displayName": "Styled(List)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-EHOje",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height={120}
                  itemCount={3}
                  itemSize={40}
                  width="100%"
                >
                  <List
                    className="sc-EHOje cBUvak"
                    direction="ltr"
                    height={120}
                    itemCount={3}
                    itemSize={40}
                    layout="vertical"
                    overscanCount={2}
                    useIsScrolling={false}
                    width="100%"
                  >
                    <div
                      className="sc-EHOje cBUvak"
                      onScroll={[Function]}
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "direction": "ltr",
                          "height": 120,
                          "overflow": "auto",
                          "position": "relative",
                          "width": "100%",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "height": 120,
                            "pointerEvents": undefined,
                            "width": "100%",
                          }
                        }
                      >
                        <LexiconRow
                          index={0}
                          key="0"
                          style={
                            Object {
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": "100%",
                            }
                          }
                        >
                          <styled.div
                            style={
                              Object {
                                "height": 40,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-htpNat",
                                    "isStatic": false,
                                    "lastClassName": "eUqOUx",
                                    "rules": Array [
                                      "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-htpNat",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "height": 40,
                                  "left": 0,
                                  "position": "absolute",
                                  "top": 0,
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="sc-htpNat eUqOUx"
                                style={
                                  Object {
                                    "height": 40,
                                    "left": 0,
                                    "position": "absolute",
                                    "top": 0,
                                    "width": "100%",
                                  }
                                }
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "laDLOs",
                                          "rules": Array [
                                            "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bxivhb laDLOs"
                                    >
                                      one
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      1
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </LexiconRow>
                        <LexiconRow
                          index={1}
                          key="1"
                          style={
                            Object {
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "top": 40,
                              "width": "100%",
                            }
                          }
                        >
                          <styled.div
                            style={
                              Object {
                                "height": 40,
                                "left": 0,
                                "position": "absolute",
                                "top": 40,
                                "width": "100%",
                              }
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-htpNat",
                                    "isStatic": false,
                                    "lastClassName": "eUqOUx",
                                    "rules": Array [
                                      "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-htpNat",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "height": 40,
                                  "left": 0,
                                  "position": "absolute",
                                  "top": 40,
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="sc-htpNat eUqOUx"
                                style={
                                  Object {
                                    "height": 40,
                                    "left": 0,
                                    "position": "absolute",
                                    "top": 40,
                                    "width": "100%",
                                  }
                                }
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "laDLOs",
                                          "rules": Array [
                                            "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bxivhb laDLOs"
                                    >
                                      two
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      2
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </LexiconRow>
                        <LexiconRow
                          index={2}
                          key="2"
                          style={
                            Object {
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "top": 80,
                              "width": "100%",
                            }
                          }
                        >
                          <styled.div
                            style={
                              Object {
                                "height": 40,
                                "left": 0,
                                "position": "absolute",
                                "top": 80,
                                "width": "100%",
                              }
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-htpNat",
                                    "isStatic": false,
                                    "lastClassName": "eUqOUx",
                                    "rules": Array [
                                      "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-htpNat",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "height": 40,
                                  "left": 0,
                                  "position": "absolute",
                                  "top": 80,
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="sc-htpNat eUqOUx"
                                style={
                                  Object {
                                    "height": 40,
                                    "left": 0,
                                    "position": "absolute",
                                    "top": 80,
                                    "width": "100%",
                                  }
                                }
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "laDLOs",
                                          "rules": Array [
                                            "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bxivhb laDLOs"
                                    >
                                      three
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      3
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </LexiconRow>
                      </div>
                    </div>
                  </List>
                </StyledComponent>
              </Styled(List)>
            </LexiconList>
          </div>
        </Card>
      </CardWrapper>
    </StyledComponent>
  </Styled(CardWrapper)>
</Lexicon>
`;

exports[`renders correct content for 3 columns data 1`] = `
<Lexicon
  data={
    Array [
      Object {
        "c1": 1,
        "c2": 0,
        "w": "one",
      },
      Object {
        "c1": 0,
        "c2": 2,
        "w": "two",
      },
      Object {
        "c1": 2,
        "c2": 1,
        "w": "three",
      },
    ]
  }
>
  <Styled(CardWrapper)
    border="primary"
    squareCorner={true}
  >
    <StyledComponent
      border="primary"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "ftHUXG",
            "rules": Array [
              "
  margin-bottom: 1rem;
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "Styled(CardWrapper)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      squareCorner={true}
    >
      <CardWrapper
        border="primary"
        className="sc-bdVaJa ftHUXG"
        squareCorner={true}
      >
        <Card
          body={false}
          border="primary"
          className="sc-bdVaJa ftHUXG"
        >
          <div
            className="sc-bdVaJa ftHUXG card border-primary"
          >
            <Styled(PanelHeader)
              bg="primary"
            >
              <StyledComponent
                bg="primary"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "ZDOPQ",
                      "rules": Array [
                        "
  padding-left: 0;
  padding-right: 10px;
",
                      ],
                    },
                    "displayName": "Styled(PanelHeader)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <PanelHeader
                  bg="primary"
                  className="sc-bwzfXH ZDOPQ"
                >
                  <CardHeader
                    className="bg-primary text-white sc-bwzfXH ZDOPQ"
                  >
                    <div
                      className="bg-primary text-white sc-bwzfXH ZDOPQ card-header"
                    >
                      <styled.div
                        noHover={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htpNat",
                                "isStatic": false,
                                "lastClassName": "eUqOUx",
                                "rules": Array [
                                  "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htpNat",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          noHover={true}
                        >
                          <div
                            className="sc-htpNat erWfTZ"
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bxivhb",
                                      "isStatic": false,
                                      "lastClassName": "laDLOs",
                                      "rules": Array [
                                        "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bxivhb",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-bxivhb laDLOs"
                                >
                                  Word
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": false,
                                      "lastClassName": "cgFVmA",
                                      "rules": Array [
                                        "
  width: 22%;
  text-align: center;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX cgFVmA"
                                >
                                  Qty1
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": false,
                                      "lastClassName": "cgFVmA",
                                      "rules": Array [
                                        "
  width: 22%;
  text-align: center;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX cgFVmA"
                                >
                                  Qty2
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </CardHeader>
                </PanelHeader>
              </StyledComponent>
            </Styled(PanelHeader)>
            <LexiconList
              itemCount={3}
            >
              <Styled(List)
                height={120}
                itemCount={3}
                itemSize={40}
                width="100%"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-EHOje",
                        "isStatic": false,
                        "lastClassName": "cBUvak",
                        "rules": Array [
                          "
  font-family: PolyglotUnited, \\"Times New Roman\\", Times, serif;
  font-size: larger;
",
                        ],
                      },
                      "displayName": "Styled(List)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-EHOje",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height={120}
                  itemCount={3}
                  itemSize={40}
                  width="100%"
                >
                  <List
                    className="sc-EHOje cBUvak"
                    direction="ltr"
                    height={120}
                    itemCount={3}
                    itemSize={40}
                    layout="vertical"
                    overscanCount={2}
                    useIsScrolling={false}
                    width="100%"
                  >
                    <div
                      className="sc-EHOje cBUvak"
                      onScroll={[Function]}
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "direction": "ltr",
                          "height": 120,
                          "overflow": "auto",
                          "position": "relative",
                          "width": "100%",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "height": 120,
                            "pointerEvents": undefined,
                            "width": "100%",
                          }
                        }
                      >
                        <LexiconRow
                          index={0}
                          key="0"
                          style={
                            Object {
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "top": 0,
                              "width": "100%",
                            }
                          }
                        >
                          <styled.div
                            style={
                              Object {
                                "height": 40,
                                "left": 0,
                                "position": "absolute",
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-htpNat",
                                    "isStatic": false,
                                    "lastClassName": "eUqOUx",
                                    "rules": Array [
                                      "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-htpNat",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "height": 40,
                                  "left": 0,
                                  "position": "absolute",
                                  "top": 0,
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="sc-htpNat eUqOUx"
                                style={
                                  Object {
                                    "height": 40,
                                    "left": 0,
                                    "position": "absolute",
                                    "top": 0,
                                    "width": "100%",
                                  }
                                }
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "laDLOs",
                                          "rules": Array [
                                            "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bxivhb laDLOs"
                                    >
                                      one
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      1
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      0
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </LexiconRow>
                        <LexiconRow
                          index={1}
                          key="1"
                          style={
                            Object {
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "top": 40,
                              "width": "100%",
                            }
                          }
                        >
                          <styled.div
                            style={
                              Object {
                                "height": 40,
                                "left": 0,
                                "position": "absolute",
                                "top": 40,
                                "width": "100%",
                              }
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-htpNat",
                                    "isStatic": false,
                                    "lastClassName": "eUqOUx",
                                    "rules": Array [
                                      "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-htpNat",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "height": 40,
                                  "left": 0,
                                  "position": "absolute",
                                  "top": 40,
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="sc-htpNat eUqOUx"
                                style={
                                  Object {
                                    "height": 40,
                                    "left": 0,
                                    "position": "absolute",
                                    "top": 40,
                                    "width": "100%",
                                  }
                                }
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "laDLOs",
                                          "rules": Array [
                                            "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bxivhb laDLOs"
                                    >
                                      two
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      0
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      2
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </LexiconRow>
                        <LexiconRow
                          index={2}
                          key="2"
                          style={
                            Object {
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "top": 80,
                              "width": "100%",
                            }
                          }
                        >
                          <styled.div
                            style={
                              Object {
                                "height": 40,
                                "left": 0,
                                "position": "absolute",
                                "top": 80,
                                "width": "100%",
                              }
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-htpNat",
                                    "isStatic": false,
                                    "lastClassName": "eUqOUx",
                                    "rules": Array [
                                      "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-htpNat",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "height": 40,
                                  "left": 0,
                                  "position": "absolute",
                                  "top": 80,
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="sc-htpNat eUqOUx"
                                style={
                                  Object {
                                    "height": 40,
                                    "left": 0,
                                    "position": "absolute",
                                    "top": 80,
                                    "width": "100%",
                                  }
                                }
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "laDLOs",
                                          "rules": Array [
                                            "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bxivhb laDLOs"
                                    >
                                      three
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      2
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "cgFVmA",
                                          "rules": Array [
                                            "
  width: 22%;
  text-align: center;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-ifAKCX cgFVmA"
                                    >
                                      1
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </LexiconRow>
                      </div>
                    </div>
                  </List>
                </StyledComponent>
              </Styled(List)>
            </LexiconList>
          </div>
        </Card>
      </CardWrapper>
    </StyledComponent>
  </Styled(CardWrapper)>
</Lexicon>
`;

exports[`renders correct content for empty data 1`] = `
<Lexicon
  data={Array []}
>
  <Styled(CardWrapper)
    border="primary"
    squareCorner={true}
  >
    <StyledComponent
      border="primary"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "ftHUXG",
            "rules": Array [
              "
  margin-bottom: 1rem;
  ",
              [Function],
              "
",
            ],
          },
          "displayName": "Styled(CardWrapper)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      squareCorner={true}
    >
      <CardWrapper
        border="primary"
        className="sc-bdVaJa ftHUXG"
        squareCorner={true}
      >
        <Card
          body={false}
          border="primary"
          className="sc-bdVaJa ftHUXG"
        >
          <div
            className="sc-bdVaJa ftHUXG card border-primary"
          >
            <Styled(PanelHeader)
              bg="primary"
            >
              <StyledComponent
                bg="primary"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "ZDOPQ",
                      "rules": Array [
                        "
  padding-left: 0;
  padding-right: 10px;
",
                      ],
                    },
                    "displayName": "Styled(PanelHeader)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <PanelHeader
                  bg="primary"
                  className="sc-bwzfXH ZDOPQ"
                >
                  <CardHeader
                    className="bg-primary text-white sc-bwzfXH ZDOPQ"
                  >
                    <div
                      className="bg-primary text-white sc-bwzfXH ZDOPQ card-header"
                    >
                      <styled.div
                        noHover={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htpNat",
                                "isStatic": false,
                                "lastClassName": "erWfTZ",
                                "rules": Array [
                                  "
  display: flex;
  padding-left: 1.25rem;
  justify-content: space-between;
  align-items: center;
  ",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htpNat",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          noHover={true}
                        >
                          <div
                            className="sc-htpNat erWfTZ"
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bxivhb",
                                      "isStatic": false,
                                      "lastClassName": "laDLOs",
                                      "rules": Array [
                                        "
  width: 22%;
  flex-grow: 1;
  text-align: left;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bxivhb",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-bxivhb laDLOs"
                                >
                                  Word
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": false,
                                      "lastClassName": "cgFVmA",
                                      "rules": Array [
                                        "
  width: 22%;
  text-align: center;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX cgFVmA"
                                >
                                  Qty
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </CardHeader>
                </PanelHeader>
              </StyledComponent>
            </Styled(PanelHeader)>
            <LexiconList
              itemCount={0}
            >
              <Styled(List)
                height={0}
                itemCount={0}
                itemSize={40}
                width="100%"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-EHOje",
                        "isStatic": false,
                        "lastClassName": "cBUvak",
                        "rules": Array [
                          "
  font-family: PolyglotUnited, \\"Times New Roman\\", Times, serif;
  font-size: larger;
",
                        ],
                      },
                      "displayName": "Styled(List)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-EHOje",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height={0}
                  itemCount={0}
                  itemSize={40}
                  width="100%"
                >
                  <List
                    className="sc-EHOje cBUvak"
                    direction="ltr"
                    height={0}
                    itemCount={0}
                    itemSize={40}
                    layout="vertical"
                    overscanCount={2}
                    useIsScrolling={false}
                    width="100%"
                  >
                    <div
                      className="sc-EHOje cBUvak"
                      onScroll={[Function]}
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "direction": "ltr",
                          "height": 0,
                          "overflow": "auto",
                          "position": "relative",
                          "width": "100%",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "height": 0,
                            "pointerEvents": undefined,
                            "width": "100%",
                          }
                        }
                      />
                    </div>
                  </List>
                </StyledComponent>
              </Styled(List)>
            </LexiconList>
          </div>
        </Card>
      </CardWrapper>
    </StyledComponent>
  </Styled(CardWrapper)>
</Lexicon>
`;
